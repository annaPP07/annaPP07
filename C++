Сортировка выбором

#include <iostream> // Подключаем библиотеку ввода-вывода

// Функция для вывода массива на экран
void printArray(int arr[], int size) {
    for (int i = 0; i < size; ++i) {   // Проходим по каждому элементу массива
        std::cout << arr[i] << " ";     // Выводим значение элемента
    }
    std::cout << "\n";                 // Переход на новую строку после печати всех элементов
}

// Основная функция сортировки выбором
void selectionSort(int arr[], int n) {
    for (int i = 0; i < n - 1; ++i) {          // Внешний цикл проходит по массиву, уменьшая область несортированных элементов
        int minIndex = i;                      // Запоминаем индекс текущего минимального элемента
        
        // Внутренний цикл ищет минимальный элемент среди оставшихся несортированных элементов
        for (int j = i + 1; j < n; ++j) {
            if (arr[j] < arr[minIndex]) {      // Если найден меньший элемент, обновляем индекс минимального элемента
                minIndex = j;
            }
        }
        
        // Меняем местами текущий элемент с минимальным элементом
        if (minIndex != i) {                   // Проверяем, действительно ли нашли новый минимум
            std::swap(arr[i], arr[minIndex]);  // Обмен значений
        }
    }
}

// Главная функция программы
int main() {
    int array[] = {64, 25, 12, 22, 11};       // Пример исходного массива
    int size = sizeof(array)/sizeof(array[0]); // Вычисление размера массива (количество элементов)
    
    std::cout << "Исходный массив:\n";
    printArray(array, size);                  // Печать исходного массива
    
    selectionSort(array, size);               // Выполняем сортировку
    
    std::cout << "Отсортированный массив:\n";
    printArray(array, size);                  // Печать отсортированного массива
    
    return 0;                                 // Завершаем программу успешно
}
